# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build, test and publish

on: [push, pull_request]

jobs:
  build_test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [13.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Clean install dependencies
      run: npm ci

    - name: Lint
      run: npm run lint

    - name: Run unit tests
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI --code-coverage
      env:
        CI: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage/iam-dashboard/lcov.info
        flags: unittests
        name: iam-dashboard

    - name: Build prod artifact
      run: npm run build -- --prod

    - name: Upload prod artifact
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist

  docker_publish:
    # Only publish from a push to the master branch, on success of the last job
    if: ${{ github.ref == 'master' }} && ${{ github.event == 'push' }}
    needs: build_test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [13.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Clean install dependencies
      run: npm ci

    - name: Build prod artifact
      run: npm run build -- --prod

    - name: Publish to Docker Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: magicalwill/iam-dashboard
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
